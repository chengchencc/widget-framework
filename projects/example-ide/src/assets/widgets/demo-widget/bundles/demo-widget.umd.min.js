!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@widget/core")):"function"==typeof define&&define.amd?define("demo-widget",["exports","@angular/core","@widget/core"],t):t(e["demo-widget"]={},e.ng.core,e.core)}(this,function(e,t,n){"use strict";var o=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();function a(e,t,n,o){var a,r=arguments.length,l=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,o);else for(var i=e.length-1;0<=i;i--)(a=e[i])&&(l=(r<3?a(l):3<r?a(t,n,l):a(t,n))||l);return 3<r&&l&&Object.defineProperty(t,n,l),l}function r(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var l=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"demo-widget-demo-widget",template:'   \n    <div class="alert alert-primary" role="alert">\n    <strong>demo-widget works!</strong>\n    </div>\n  '}]}],e.ctorParameters=function(){return[]},e=a([n.Widget({name:"demo-widget"}),r("design:paramtypes",[])],e)}(),i=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"demo-widget-demo-widget-nav",template:'<nav class="navbar navbar-expand-md navbar-light bg-light">\n  <a class="navbar-brand" href="#">Navbar</a>\n  <button class="navbar-toggler d-lg-none" type="button" data-toggle="collapse" data-target="#collapsibleNavId" aria-controls="collapsibleNavId"\n      aria-expanded="false" aria-label="Toggle navigation">\n    <span class="navbar-toggler-icon"></span>\n  </button>\n  <div class="collapse navbar-collapse" id="collapsibleNavId">\n    <ul class="navbar-nav mr-auto mt-2 mt-lg-0">\n      <li class="nav-item active">\n        <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="#">Link</a>\n      </li>\n      <li class="nav-item dropdown">\n        <a class="nav-link dropdown-toggle" href="#" id="dropdownId" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown</a>\n        <div class="dropdown-menu" aria-labelledby="dropdownId">\n          <a class="dropdown-item" href="#">Action 1</a>\n          <a class="dropdown-item" href="#">Action 2</a>\n        </div>\n      </li>\n    </ul>\n    <form class="form-inline my-2 my-lg-0">\n      <input class="form-control mr-sm-2" type="text" placeholder="Search">\n      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>\n    </form>\n  </div>\n</nav>\n',styles:[""]}]}],e.ctorParameters=function(){return[]},e=a([n.Widget({name:"demo-widget-nav"}),r("design:paramtypes",[])],e)}(),s=function(){function e(){}return Object.defineProperty(e.prototype,"fcolor",{get:function(){return this.color||"black"},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.resetColor=function(){this.color="black"},e.decorators=[{type:t.Component,args:[{selector:"demo-widget-jumbotron",template:'<div class="jumbotron">\n  <h1 class="display-4" [style.color]="fcolor">Hello, world!</h1>\n  <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n  <hr class="my-4">\n  <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n  <a class="btn btn-primary btn-lg" href="#" role="button" (click)="resetColor()">reset color</a>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e.propDecorators={color:[{type:t.Input}]},e=a([n.Widget({name:"demo-widget-jumbotron"}),r("design:paramtypes",[])],e)}(),c=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"demo-widget-form-login",template:'<form>\n  <div class="form-group">\n    <label for="exampleInputEmail1">Email address</label>\n    <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">\n    <small id="emailHelp" class="form-text text-muted">We\'ll never share your email with anyone else.</small>\n  </div>\n  <div class="form-group">\n    <label for="exampleInputPassword1">Password</label>\n    <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">\n  </div>\n  <div class="form-group form-check">\n    <input type="checkbox" class="form-check-input" id="exampleCheck1">\n    <label class="form-check-label" for="exampleCheck1">Check me out</label>\n  </div>\n  <button type="submit" class="btn btn-primary">Submit</button>\n</form>',styles:[""]}]}],e.ctorParameters=function(){return[]},e=a([n.Widget({name:"demo-widget-form-login"}),r("design:paramtypes",[])],e)}(),d=function(){function e(){this.settings={title:"Card Title",subtitle:"Sub Title"},this.titleClick=new t.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.onTitleClick=function(e){this.titleClick.emit({event:e,msg:"red"})},e.decorators=[{type:t.Component,args:[{selector:"demo-widget-card",template:'<div class="card" style="">\n  <div class="card-body">\n    <h5 class="card-title">{{settings.title}}</h5>\n    <h6 class="card-subtitle mb-2 text-muted">{{settings.subtitle}}</h6>\n    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n    <a href="#" class="card-link" (click)="onTitleClick($event)">Card link</a>\n    <a href="#" class="card-link">Another link</a>\n    <button class="btn btn-danger">click</button>\n  </div>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e.propDecorators={settings:[{type:t.Input}],titleClick:[{type:t.Output}]},e=a([n.Widget({name:"demo-widget-card"}),r("design:paramtypes",[])],e)}(),p=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[l,i,s,c,d],imports:[],exports:[l]}]}],e}();e.DemoWidgetService=o,e.DemoWidgetComponent=l,e.DemoWidgetModule=p,e.ɵd=d,e.ɵa=i,e.ɵc=c,e.ɵb=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=demo-widget.umd.min.js.map